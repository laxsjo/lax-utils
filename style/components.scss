@import url("https://css.gg/css");

.icon {
	--size: 1em;
	display: inline-block;
	width: var(--size);
	height: var(--size);
	stroke-width: 0;
	stroke: currentColor;
	fill: currentColor;
}

.hidden {
	display: none;
}

.color-picker {
	// debug values
	--current-hue: 210;
	--color-cursor-x: 1;
	--color-cursor-y: 0.5;
	--hue-cursor: 1;
	display: grid;
	grid:
		"m d" auto
		"m c" auto
		"i c" auto
		"i o" auto
		/ auto;
	gap: 0.8rem;

	margin-inline: auto;
	padding: 0.8rem;

	border-radius: 0.4rem;

	background-color: var(--bg-secondary);

	.labeled-input {
		border-radius: 0.4rem;

		.prefix {
			margin-left: 0.6rem;
		}
		.postfix {
			margin-right: 0.3rem;
			width: 1em;

			text-align: start;
		}

		input {
			width: 6ch;
			padding: 0.6rem;
			padding-left: calc(0.6rem + 1ch);
			padding-right: calc(0.3rem + 0.2rem + 0.83em);

			font-size: 1.2em;
			text-align: end;

			border-radius: 0.4rem;
		}
	}

	.map {
		display: flex;
		flex-direction: column;
		gap: 0.6rem;
		grid-area: m;

		height: 20rem;

		// width: 20rem;

		.sat-value-surface {
			flex-grow: 1;

			height: auto;
		}
	}

	.color-space {
		grid-area: c;

		.radio-group {
			display: grid;
			grid:
				auto
				auto
				/ 1fr 1fr 1fr;
			flex-direction: row;
			align-items: start;
			gap: 0.4rem;

			padding: 0.5rem;
			margin: 0;
			// padding-top: 0.5em;

			border: none;
			border-radius: 0.4rem;

			background-color: var(--bg-input);

			legend {
				// source: https://stackoverflow.com/a/24627851/15507414
				grid-column: span 3;

				float: left;

				margin-inline: auto;

				// font-variant-caps: titling-caps;
				text-transform: uppercase;

				color: var(--fg-input);

				// position: fixed;
				// top: -10000px;
				// left: -10000px;
				// width: 1px;
				// height: 1px;
			}

			& > :not(legend) {
				clear: both;
			}
		}
	}

	.controls {
		display: grid;
		grid:
			"i i i cpy" auto
			"i i i cpy" auto
			/ 1fr 1fr 1fr max-content;
		gap: 0.8rem 0.4rem;
		place-items: center;

		grid-area: i;

		.integers {
			display: contents;
		}
		.floats {
			display: contents;
		}

		.labeled-input {
			justify-self: stretch;

			input {
				width: 100%;
			}
		}

		.copy-button {
			width: min-content;
			aspect-ratio: 1;

			font-size: 1.2em;

			border-radius: 100%;
		}

		// .integers,
		// .floats {
		// 	display: flex;
		// 	flex-flow: row nowrap;

		// 	gap: 0.2rem;
		// }

		// .labeled-input {
		// 	grid-area: i;
		// }
	}

	.options {
		grid-area: o;
	}

	.display {
		grid-area: d;
		width: 12rem;

		.color-display {
			width: 100%;
			height: 8rem;

			border-radius: 0.4rem 0.4rem 0 0;

			background-color: rgb(var(--r), var(--g), var(--b));
		}

		.hex-code {
			box-sizing: border-box;
			display: flex;
			flex-direction: row;
			align-items: center;
			gap: 0.4rem;

			justify-content: space-between;

			width: 100%;
			padding-left: 0.6rem;

			font-size: 1.2em;

			border-radius: 0 0 0.4rem 0.4rem;

			background-color: var(--bg-input);

			.prefix {
				font-size: 1rem;

				color: var(--fg-input);
			}

			input {
				align-self: stretch;
				flex-grow: 1;
				flex-shrink: 1;

				min-width: 6ch;

				text-align: center;
				font-size: 1.2rem;

				border-radius: 0.4rem;
			}

			.copy-button {
				border-radius: 100%;

				font-size: 1.2rem;
			}

			// // .icon {
			// // 	// font-size: 1rem;
			// // }
		}
	}
}

.sat-value-surface {
	touch-action: none;
	user-select: none;

	position: relative;

	width: 100%;
	height: 100%;

	border-radius: 0.8rem;

	background-color: hsl(calc(var(--current-hue) * 360), 100%, 50%);

	* {
		user-select: none;
	}

	&::before {
		content: "";
		z-index: 1;

		position: absolute;
		inset: 0;

		border-radius: inherit;

		background: linear-gradient(to top, black, white);
		mix-blend-mode: multiply;
	}

	&__cursor {
		--border-color: hsl(
			0,
			0%,
			calc(max(var(--cursor-y) * 2, var(--cursor-x) * 2) * 100%)
		);
		// --border-color: white;
		// mix-blend-mode: difference;

		z-index: 3;
		cursor: pointer;

		box-sizing: border-box;
		position: absolute;
		top: calc(var(--cursor-y) * 100% - 0.5rem);
		left: calc(var(--cursor-x) * 100% - 0.5rem);

		width: 1rem;
		height: 1rem;

		border: 2px solid var(--border-color);
		border-radius: 50%;
	}

	&::after {
		content: "";
		z-index: 2;

		position: absolute;
		inset: 0;

		border-radius: inherit;

		background: linear-gradient(to top, black, white);
		mask-image: linear-gradient(to right, black, transparent);
		mix-blend-mode: lighten;
	}
}

.hue-slider {
	touch-action: none;
	user-select: none;

	position: relative;

	width: 100%;
	height: 1rem;

	border-radius: 0.8rem;

	background: linear-gradient(
		to right,
		#ff0000 0,
		#ffff00 16.67%,
		#00ff00 33.33%,
		#00ffff 50%,
		#0000ff 66.67%,
		#ff00ff 83.33%,
		#ff0000 100%
	);

	* {
		user-select: none;
	}

	&__cursor {
		--width: 0.4rem;

		cursor: pointer;

		position: absolute;
		top: -0.2rem;
		bottom: -0.2rem;
		left: calc(var(--hue) * 100% - var(--width) / 2);

		width: var(--width);

		border-radius: var(--width);

		background-color: white;
	}
}

@keyframes popup-slide-up {
	0% {
		opacity: 0;
		transform: translate(-50%, 100%);
	}

	100% {
		opacity: 1;
		transform: translate(-50%, 0);
	}
}

.labeled-input {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;

	position: relative;
	// --width: 6ch;

	// width: var(--width);

	background-color: var(--bg-input);

	transition: background-color ease 0.2s;

	&:hover,
	&:focus-within {
		background-color: var(--bg-input-hover);
	}

	&:active {
		background-color: var(--bg-input-active);
	}

	.input {
		display: contents;

		& > * {
			z-index: 1;

			background-color: transparent;
			// position: absolute;

			// inset: 0;
		}
	}

	.prefix {
		left: 0;
	}

	.postfix {
		right: 0;
	}

	.prefix,
	.postfix {
		user-select: none;
		pointer-events: none;

		position: absolute;
		z-index: 2;

		color: var(--fg-input);
	}
}

.copy-button {
	--padding: 0.6rem;

	cursor: pointer;

	display: flex;
	flex-flow: row nowrap;
	gap: 0.4rem;
	align-items: center;

	position: relative;

	width: fit-content;
	padding: var(--padding);

	color: var(--fg-primary);

	border-radius: 0.4rem;
	border: none;

	background-color: var(--bg-input);

	transition: background-color ease 0.2s;

	.icon {
		color: var(--fg-input);
	}

	&:hover,
	&:focus-visible {
		background-color: var(--bg-input-hover);

		.icon {
			color: inherit;
		}
	}

	&:active {
		background-color: var(--bg-input-active);

		.icon {
			color: inherit;
		}
	}

	.popup {
		cursor: default;

		display: flex;
		flex-flow: row wrap;
		align-items: center;
		gap: 0.5rem;
		opacity: 0;

		position: fixed;
		// bottom: calc(100% + 0.5rem);
		bottom: 1.5rem;
		left: 50%;
		z-index: 100;
		// left: calc(-1 * var(--padding));

		width: max-content;
		max-width: 100vw;
		padding: 0.6rem 0.8rem;
		margin-inline: auto;

		font-size: 1.15rem;

		border-radius: 10000rem;

		background-color: var(--accent);

		transform: translateX(-50%);

		transition: opacity ease-in-out var(--duration-out);

		.icon {
			--size: 1.3em;

			color: inherit;
		}

		&.shown {
			display: flex;

			opacity: 1;

			animation: 0.5s cubic-bezier(0.6, 0.4, 0, 1) none popup-slide-up;
		}

		&.hidden {
			display: none;
		}
	}
}

.fancy-select {
	display: inline-flex;
	flex-direction: row;
	align-items: center;
	// border: 2;

	position: relative;

	width: fit-content;

	font-size: 1.2em;

	border-radius: 0.4rem;

	&:focus-within {
		.icon {
			color: var(--fg-primary);

			transform: rotate(180deg);
		}
	}

	&:hover {
		.icon {
			color: var(--fg-primary);
		}
	}

	:focus-visible {
		outline-color: var(--accent);
	}

	select {
		appearance: none;

		position: relative;
		z-index: 1;

		padding: 0.4rem 0.6rem;
		padding-right: calc(0.2rem + 0.4rem + 1.2em);

		font-size: 1em;

		border: none;
		border-radius: inherit;

		background-color: var(--bg-input);

		transition: background-color ease 0.2s;

		&:hover,
		&:focus-visible {
			background-color: var(--bg-input-hover);
		}

		&:active {
			background-color: var(--bg-input-active);
		}

		option {
			background-color: var(--bg-input);

			&:hover,
			&:focus-visible {
				background-color: var(--bg-input-hover);
			}

			&:active {
				background-color: var(--bg-input-active);
			}
		}
	}

	.icon {
		--size: 1.2em;

		pointer-events: none;
		user-select: none;

		position: absolute;
		right: 0.4rem;
		z-index: 2;

		color: var(--fg-input);

		transition: transform ease-out 0.2s;
	}
}

.radio-group label {
	display: inline-block;
	// width: max-content;
	// height: max-content;

	position: relative;

	// padding: 0.4rem;

	&[data-checked] {
		& > input {
			--bg: var(--bg-btn-primary);
			--bg-hover: var(--bg-btn-primary-hover);
			--bg-active: var(--bg-btn-primary-active);
		}
	}

	& > span {
		display: block;
		position: relative;
		z-index: 1;

		margin: 0.4rem 0.6rem;
	}

	& > input {
		--bg: var(--bg-btn-secondary);
		--bg-hover: var(--bg-btn-secondary-hover);
		--bg-active: var(--bg-btn-secondary-active);
		appearance: none;
		display: block;

		position: absolute;
		inset: 0;
		z-index: 0;

		margin: 0;
		padding: 0;

		border-radius: 100rem;

		background-color: var(--bg);

		&:hover,
		&:focus-visible {
			background-color: var(--bg-hover);
		}

		&:active {
			background-color: var(--bg-active);
		}
	}
}
