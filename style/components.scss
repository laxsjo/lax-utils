@import url("https://css.gg/css");

.icon {
	--size: 1em;
	display: inline-block;
	width: var(--size);
	height: var(--size);
	stroke-width: 0;
	stroke: currentColor;
	fill: currentColor;
}

.hidden {
	display: none;
}

.color-picker {
	// debug values
	--current-hue: 210;
	--color-cursor-x: 1;
	--color-cursor-y: 0.5;
	--hue-cursor: 1;

	display: grid;
	grid:
		"map dis" auto
		"map csp" auto
		"inp csp" auto
		"inp opt" auto
		/ minmax(auto, max-content) 1fr;
	gap: 0.8rem;

	width: 100%;
	margin-inline: auto;
	padding: 0.8rem;

	border-radius: 0.4rem;

	background-color: var(--bg-secondary);

	// @container main (max-width: 800px) {
	// 	background-color: lightblue;
	// }

	.map {
		display: flex;
		flex-direction: column;
		gap: 0.6rem;
		grid-area: map;

		height: 20rem;

		.sat-value-surface {
			flex-grow: 1;

			height: auto;
		}
	}

	.controls {
		--input-padding-left: calc(0.6rem + 1ch);
		--input-padding-right: calc(0.3rem + 0.2rem + 0.83rem);

		display: grid;
		grid:
			auto
			auto
			/ 1fr 1fr 1fr auto;
		gap: 0.8rem 0.4rem;
		place-items: center;

		grid-area: inp;

		// width: calc(
		// 	3 * (6ch + var(--input-padding-left) + var(--input-padding-right)) +
		// 		3 * 0.4rem
		// );
		// width: var(--input-padding-right);

		.integers {
			display: contents;
		}
		.floats {
			display: contents;
		}

		.copy-button {
			grid-column: 4;

			width: min-content;
			aspect-ratio: 1;

			font-size: 1.2rem;

			border-radius: 100%;
		}

		.labeled-input {
			justify-self: stretch;
			border-radius: 0.4rem;

			// max-width: calc(
			// 	6ch + var(--input-padding-left) + var(--input-padding-right)
			// );
			// max-width: 6rem;

			.prefix {
				margin-left: 0.6rem;
			}
			.postfix {
				margin-right: 0.3rem;
				width: 1em;

				text-align: start;
			}

			input {
				box-sizing: content-box;

				max-width: 6ch;
				min-width: 0;

				padding: 0.6rem;
				padding-left: var(--input-padding-left);
				padding-right: var(--input-padding-right);

				font-size: 1.2rem;
				text-align: end;

				border-radius: 0.4rem;
			}
		}
	}

	.display {
		grid-area: dis;
		// width: 12rem;

		.color-display {
			width: 100%;
			height: 8rem;

			border-radius: 0.4rem 0.4rem 0 0;

			background-color: rgb(var(--r), var(--g), var(--b));
		}

		.hex-code {
			box-sizing: border-box;
			display: flex;
			flex-direction: row;
			align-items: center;
			gap: 0.4rem;

			justify-content: space-between;

			width: 100%;
			padding-left: 0.6rem;

			border-radius: 0 0 0.4rem 0.4rem;

			background-color: var(--bg-input);

			.prefix {
				font-size: 1rem;

				color: var(--fg-input);
			}

			input {
				align-self: stretch;
				flex-grow: 1;
				flex-shrink: 1;

				padding: 0;
				width: 6ch;
				min-width: 0; // ? is this a good idea?

				text-align: center;
				font-size: 1.2rem;

				border-radius: 0.4rem;
			}

			.copy-button {
				border-radius: 100%;

				font-size: 1.2rem;
			}
		}
	}

	.color-space {
		grid-area: csp;

		.radio-group {
			display: flex;
			flex-direction: column;
			align-items: center;
			gap: 0.4rem;

			padding: 0.5rem;
			// padding-top: ;
			margin: 0;

			border: none;
			border-radius: 0.4rem;

			background-color: var(--bg-input);

			legend {
				// grid-column: span 3;

				// source: https://stackoverflow.com/a/24627851/15507414
				float: left;

				margin-inline: auto;

				text-transform: uppercase;

				color: var(--fg-input);
			}

			.inputs {
				display: flex;
				flex-flow: row wrap;
				justify-content: start;

				// width: 100%;
				// grid-template-columns: repeat(
				// 	auto-fill,
				// 	minmax(3.5rem, min-content)
				// );
				// flex-flow: row wrap;
				// justify-content: center;
				gap: 0.4rem;
			}
		}
	}

	.options {
		grid-area: opt;
	}

	@container (max-width: 38rem) {
		grid:
			"map map map" auto
			"inp inp inp" auto
			"dis csp opt" auto
			/ 1fr auto auto;

		.map {
			width: 70cqw;
			justify-self: center;
		}
		.controls {
			.labeled-input input {
				appearance: none;
				max-width: unset;
				width: 100%;
			}
			// width: 10rem;
		}
		.color-space {
			justify-self: start;
			// max-width: max-content;
			// .radio-group {
			// 	max-width: max-content;
			// }
		}
		.options {
			align-self: end;
		}
	}

	@container (max-width: 36.25rem) {
		grid:
			"map map" auto
			"inp inp" auto
			"dis csp" auto
			"opt opt" auto
			/ 1fr auto auto;

		.controls {
			grid:
				auto
				auto
				/ auto;
			place-items: stretch;

			.labeled-input input {
				font-size: 1rem;
			}

			.integers,
			.floats {
				display: flex;
				flex-flow: row wrap;
				gap: 0.4rem;
				justify-content: stretch;

				.labeled-input {
					flex-grow: 1;
				}
			}
		}

		.options {
			justify-self: start;
		}
	}
}

.sat-value-surface {
	touch-action: none;
	user-select: none;

	position: relative;

	width: 100%;
	height: 100%;

	border-radius: 0.8rem;

	background-color: hsl(calc(var(--current-hue) * 360), 100%, 50%);

	* {
		user-select: none;
	}

	&::before {
		content: "";
		z-index: 1;

		position: absolute;
		inset: 0;

		border-radius: inherit;

		background: linear-gradient(to top, black, white);
		mix-blend-mode: multiply;
	}

	&__cursor {
		--border-color: hsl(
			0,
			0%,
			calc(max(var(--cursor-y) * 2, var(--cursor-x) * 2) * 100%)
		);

		z-index: 3;
		cursor: pointer;

		box-sizing: border-box;
		position: absolute;
		top: calc(var(--cursor-y) * 100% - 0.5rem);
		left: calc(var(--cursor-x) * 100% - 0.5rem);

		width: 1rem;
		height: 1rem;

		border: 2px solid var(--border-color);
		border-radius: 50%;
	}

	&::after {
		content: "";
		z-index: 2;

		position: absolute;
		inset: 0;

		border-radius: inherit;

		background: linear-gradient(to top, black, white);
		mask-image: linear-gradient(to right, black, transparent);
		mix-blend-mode: lighten;
	}
}

.hue-slider {
	touch-action: none;
	user-select: none;

	position: relative;

	width: 100%;
	height: 1rem;

	border-radius: 0.8rem;

	background: linear-gradient(
		to right,
		#ff0000 0,
		#ffff00 16.67%,
		#00ff00 33.33%,
		#00ffff 50%,
		#0000ff 66.67%,
		#ff00ff 83.33%,
		#ff0000 100%
	);

	* {
		user-select: none;
	}

	&__cursor {
		--width: 0.4rem;

		cursor: pointer;

		position: absolute;
		top: -0.2rem;
		bottom: -0.2rem;
		left: calc(var(--hue) * 100% - var(--width) / 2);

		width: var(--width);

		border-radius: var(--width);

		background-color: white;
	}
}

@keyframes popup-slide-up {
	0% {
		opacity: 0;
		transform: translate(-50%, 100%);
	}

	100% {
		opacity: 1;
		transform: translate(-50%, 0);
	}
}

.labeled-input {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;

	position: relative;

	background-color: var(--bg-input);

	transition: background-color ease 0.2s;

	&:hover,
	&:focus-within {
		background-color: var(--bg-input-hover);
	}

	&:active {
		background-color: var(--bg-input-active);
	}

	.input {
		display: contents;

		& > * {
			z-index: 1;

			background-color: transparent;
		}
	}

	.prefix {
		left: 0;
	}

	.postfix {
		right: 0;
	}

	.prefix,
	.postfix {
		user-select: none;
		pointer-events: none;

		position: absolute;
		z-index: 2;

		color: var(--fg-input);
	}
}

.copy-button {
	--padding: 0.6rem;

	cursor: pointer;

	display: flex;
	flex-flow: row nowrap;
	gap: 0.4rem;
	align-items: center;

	position: relative;

	width: fit-content;
	padding: var(--padding);

	color: var(--fg-primary);

	border-radius: 0.4rem;
	border: none;

	background-color: var(--bg-input);

	transition: background-color ease 0.2s;

	.icon {
		color: var(--fg-input);
	}

	&:hover,
	&:focus-visible {
		background-color: var(--bg-input-hover);

		.icon {
			color: inherit;
		}
	}

	&:active {
		background-color: var(--bg-input-active);

		.icon {
			color: inherit;
		}
	}

	// .popup {
	// 	cursor: default;

	// 	display: flex;
	// 	flex-flow: row wrap;
	// 	align-items: center;
	// 	gap: 0.5rem;
	// 	opacity: 0;

	// 	position: fixed;
	// 	bottom: 1.5rem;
	// 	left: 50%;
	// 	z-index: 100;

	// 	width: max-content;
	// 	max-width: 100vw;
	// 	padding: 0.6rem 0.8rem;
	// 	margin-inline: auto;

	// 	font-size: 1.15rem;

	// 	border-radius: 10000rem;

	// 	background-color: var(--accent);

	// 	transform: translateX(-50%);

	// 	transition: opacity ease-in-out var(--duration-out);

	// 	.icon {
	// 		--size: 1.3em;

	// 		color: inherit;
	// 	}

	// 	&.shown {
	// 		display: flex;

	// 		opacity: 1;

	// 		animation: 0.5s cubic-bezier(0.6, 0.4, 0, 1) none popup-slide-up;
	// 	}

	// 	&.hidden {
	// 		display: none;
	// 	}
	// }
}

.fancy-select {
	display: inline-flex;
	flex-direction: row;
	align-items: center;

	position: relative;

	width: fit-content;

	font-size: 1.2rem;

	border-radius: 0.4rem;

	&:focus-within {
		.icon {
			color: var(--fg-primary);

			transform: rotate(180deg);
		}
	}

	&:hover {
		.icon {
			color: var(--fg-primary);
		}
	}

	:focus-visible {
		outline-color: var(--accent);
	}

	select {
		appearance: none;

		position: relative;
		z-index: 1;

		padding: 0.4rem 0.6rem;
		padding-right: calc(0.2rem + 0.4rem + 1.2em);

		font-size: 1em;

		border: none;
		border-radius: inherit;

		background-color: var(--bg-input);

		transition: background-color ease 0.2s;

		&:hover,
		&:focus-visible {
			background-color: var(--bg-input-hover);
		}

		&:active {
			background-color: var(--bg-input-active);
		}

		option {
			background-color: var(--bg-input);

			&:hover,
			&:focus-visible {
				background-color: var(--bg-input-hover);
			}

			&:active {
				background-color: var(--bg-input-active);
			}
		}
	}

	.icon {
		--size: 1.2em;

		pointer-events: none;
		user-select: none;

		position: absolute;
		right: 0.4rem;
		z-index: 2;

		color: var(--fg-input);

		transition: transform ease-out 0.2s;
	}
}

.radio-group label {
	cursor: pointer;
	display: inline-block;

	position: relative;

	&[data-checked] {
		& > input {
			--bg: var(--bg-btn-primary);
			--bg-hover: var(--bg-btn-primary-hover);
			--bg-active: var(--bg-btn-primary-active);
		}
	}

	& > span {
		display: block;
		position: relative;
		z-index: 1;
		font-weight: 500; // TODO: is this boldness good?

		margin: 0.4rem 0.6rem;
	}

	& > input {
		--bg: var(--bg-btn-secondary);
		--bg-hover: var(--bg-btn-secondary-hover);
		--bg-active: var(--bg-btn-secondary-active);

		cursor: pointer;
		appearance: none;
		display: block;

		position: absolute;
		inset: 0;
		z-index: 0;

		margin: 0;
		padding: 0;

		border-radius: 100rem;

		background-color: var(--bg);

		&:hover,
		&:focus-visible {
			background-color: var(--bg-hover);
		}

		&:active {
			background-color: var(--bg-active);
		}
	}
}
