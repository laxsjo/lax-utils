// this stylesheet contains styling that controls global layout, such as the
// sidenav or footer.

body {
	display: grid;
	grid:
		"menu main" 1fr
		"menu footer" auto
		/ min-content 1fr;
	// gap: 1rem;
}

.side-nav {
	--radius: 0.6rem;
	grid-area: menu;

	position: relative;

	color: var(--fg-primary);

	background-color: var(--bg-header);

	nav {
		display: flex;
		flex-flow: column nowrap;
		// gap: 0.6rem;

		height: 100%;

		background-color: var(--secondary-bg);
	}

	li {
		position: relative;
		z-index: 1;

		list-style-type: none;

		a {
			--bg: transparent;
			--bg-hover: var(--bg-btn-secondary-hover);
			--bg-active: var(--bg-btn-secondary-active);
			--fg: var(--fg-secondary);
			--fg-hover: var(--fg-secondary);
			--fg-active: var(--fg-primary);
			display: flex;
			flex-direction: row;
			align-items: center;

			padding-inline: 0.5em;
			width: 2em;

			text-decoration: none;
			writing-mode: vertical-lr;
			text-align: center;
			font-weight: 500;

			color: var(--fg);

			border-end-start-radius: var(--radius);
			border-end-end-radius: var(--radius);

			background-color: var(--bg);

			transition: background-color ease 0.2s;

			&.active {
				--fg: var(--fg-primary);
				--fg-hover: var(--fg-primary);
				--fg-active: var(--fg-primary);

				&::before {
					content: "";

					position: absolute;
					top: 0;
					left: 0;
					bottom: 0;
					// right: 0;

					height: var(--height);
					width: 0.2rem;

					// border-top-right-radius: var(--radius);
					// border-bottom-right-radius: var(--radius);
					border-radius: 1rem;

					background-color: var(--accent);

					&:hover {
						background-color: var(--bg-hover);
					}
				}
			}

			&:hover,
			&:focus-visible {
				color: var(--fg-hover);

				background-color: var(--bg-hover);
			}

			&:active {
				color: var(--fg-active);

				background-color: var(--bg-active);

				// transition: none;
				transition-duration: 0.05s;
			}
		}
	}

	&[data-js-enabled] {
		li a.active::before {
			content: unset;
		}

		&::before {
			content: "";

			position: absolute;
			top: 0;
			left: 0;
			// right: 0;
			z-index: 2;

			height: var(--height);
			width: 0.2rem;

			// border-top-right-radius: var(--radius);
			// border-bottom-right-radius: var(--radius);
			border-radius: 1rem;

			background-color: var(--accent);

			transform: translateY(var(--y-offset));
			transition: transform cubic-bezier(0.76, 0, 0.24, 1) 0.3s; // easeInOutQuart
			transition-property: transform, height;
		}
	}
}

main {
	container: main / inline-size;

	grid-area: main;
	place-self: center;

	width: min(44rem, 100%);
	height: 100%;
	// width: max(10rem, 50%);
	padding-inline: 1rem;
}

footer {
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	gap: 20vw;

	padding: 1rem;

	grid-area: footer;

	background-color: var(--bg-secondary);

	.links {
		display: flex;
		flex-direction: column;
		gap: 0.2rem;

		padding: 0;
		margin: 0;

		li {
			display: flex;
			flex-direction: row;
			align-items: center;
			gap: 0.4rem;

			list-style: none;
		}
	}

	@media (max-width: 26rem) {
		flex-direction: column;
		gap: 2rem;
	}
}

@keyframes slide-up {
	0% {
		opacity: 0;
		transform: translateY(100%);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes fade-out {
	100% {
		opacity: 0;
		// background-color: lightblue;
	}
}

.toasts {
	pointer-events: none;

	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: end;
	gap: 0.5rem;

	// grid-area: span 2 / span 2;
	// place-self: end center;

	position: fixed;
	bottom: calc(100% + 0.5rem);
	top: 0;
	bottom: 1.5rem;
	left: 50%;
	z-index: 100;
	// margin-top: auto;

	transform: translateX(-50%);
	// left: calc(-1 * var(--padding));

	.animated-replacement {
		&,
		& > div {
			display: contents;
		}
	}

	.toast {
		cursor: default;

		display: flex;
		flex-flow: row wrap;
		align-items: center;
		gap: 0.5rem;
		opacity: 0;
		width: max-content;
		max-width: 100vw;
		padding: 0.6rem 0.8rem;
		margin-inline: auto;

		position: absolute;
		bottom: 0;

		font-size: 1.15rem;

		border-radius: 10000rem;

		background-color: var(--accent);

		transition: opacity ease-in-out var(--duration-out);

		animation: 0.5s cubic-bezier(0.6, 0.4, 0, 1) none slide-up;

		.icon {
			--size: 1.3em;

			color: inherit;
		}

		&.active {
			opacity: 1;
		}
	}

	.transition-out {
		.toast {
			animation: var(--duration-out) ease-in-out forwards fade-out;
		}
	}
}
